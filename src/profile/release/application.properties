spring.profiles.active=release
spring.kafka.topics=version_info,version_info_del,material_info,material_info_del,j_node_question,j_node_question_del,node_info,node_info_del,dc_tp_course_info_new,j_material_node_info,j_material_node_info_del,j_node_resources,j_node_resources_del,micro_course_info,micro_course_info_del,j_micro_course_resource,j_micro_course_resource_del,j_micro_course_rs_ques,j_micro_course_rs_ques_del,j_node_micro_course,j_node_micro_course_del,j_ab_paper_question,j_ab_paper_question_del,j_node_sort_snap,j_node_question_snap
spring.kafka.bootstrap-servers=c71117.localdomain:9092,c71118.localdomain:9092,c71119.localdomain:9092
spring.kafka.listener.ack-mode=manual
#监听者并发线程数量,一个线程对应一个partition
spring.kafka.listener.concurrency=1
spring.kafka.template.default-topic=default
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=1000
spring.kafka.consumer.group-id=kafka-chapter-readback-release-new-1
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.fetch-max-wait=100
spring.kafka.consumer.auto-offset-reset=latest
#在单次调用poll()中返回的最大记录数
spring.kafka.consumer.max-poll-records=100
##kafka服务器拉取请求返回的最小数据量，如果数据不足，请求将等待数据积累.
spring.kafka.consumer.fetch-min-size=1
spring.kafka.listener.poll-timeout=3000
