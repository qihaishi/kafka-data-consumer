<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etiantian.dao.mappers.JNodeMicroCourseMapper">
  <resultMap id="BaseResultMap" type="com.etiantian.entity.JNodeMicroCourse">
    <id column="ref" jdbcType="BIGINT" property="ref" />
    <result column="node_id" jdbcType="BIGINT" property="nodeId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="c_user_id" jdbcType="BIGINT" property="cUserId" />
    <result column="c_time" jdbcType="TIMESTAMP" property="cTime" />
    <result column="m_user_id" jdbcType="BIGINT" property="mUserId" />
    <result column="m_time" jdbcType="TIMESTAMP" property="mTime" />
    <result column="ggs_time" jdbcType="TIMESTAMP" property="ggsTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ref, node_id, course_id, sort_num, c_user_id, c_time, m_user_id, m_time, ggs_time
  </sql>
  <select id="selectByExample" parameterType="com.etiantian.entity.JNodeMicroCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from j_node_micro_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from j_node_micro_course
    where ref = #{ref,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from j_node_micro_course
    where ref = #{ref,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.etiantian.entity.JNodeMicroCourseExample">
    delete from j_node_micro_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.etiantian.entity.JNodeMicroCourse">
    insert into j_node_micro_course (ref, node_id, course_id, 
      sort_num, c_user_id, c_time, 
      m_user_id, m_time, ggs_time
      )
    values (#{ref,jdbcType=BIGINT}, #{nodeId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, 
      #{sortNum,jdbcType=INTEGER}, #{cUserId,jdbcType=BIGINT}, #{cTime,jdbcType=TIMESTAMP}, 
      #{mUserId,jdbcType=BIGINT}, #{mTime,jdbcType=TIMESTAMP}, #{ggsTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.etiantian.entity.JNodeMicroCourse">
    insert into j_node_micro_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ref != null">
        ref,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="cUserId != null">
        c_user_id,
      </if>
      <if test="cTime != null">
        c_time,
      </if>
      <if test="mUserId != null">
        m_user_id,
      </if>
      <if test="mTime != null">
        m_time,
      </if>
      <if test="ggsTime != null">
        ggs_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ref != null">
        #{ref,jdbcType=BIGINT},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="cUserId != null">
        #{cUserId,jdbcType=BIGINT},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mUserId != null">
        #{mUserId,jdbcType=BIGINT},
      </if>
      <if test="mTime != null">
        #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ggsTime != null">
        #{ggsTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.etiantian.entity.JNodeMicroCourseExample" resultType="java.lang.Integer">
    select count(*) from j_node_micro_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update j_node_micro_course
    <set>
      <if test="record.ref != null">
        ref = #{record.ref,jdbcType=BIGINT},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.sortNum != null">
        sort_num = #{record.sortNum,jdbcType=INTEGER},
      </if>
      <if test="record.cUserId != null">
        c_user_id = #{record.cUserId,jdbcType=BIGINT},
      </if>
      <if test="record.cTime != null">
        c_time = #{record.cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mUserId != null">
        m_user_id = #{record.mUserId,jdbcType=BIGINT},
      </if>
      <if test="record.mTime != null">
        m_time = #{record.mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ggsTime != null">
        ggs_time = #{record.ggsTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update j_node_micro_course
    set ref = #{record.ref,jdbcType=BIGINT},
      node_id = #{record.nodeId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      sort_num = #{record.sortNum,jdbcType=INTEGER},
      c_user_id = #{record.cUserId,jdbcType=BIGINT},
      c_time = #{record.cTime,jdbcType=TIMESTAMP},
      m_user_id = #{record.mUserId,jdbcType=BIGINT},
      m_time = #{record.mTime,jdbcType=TIMESTAMP},
      ggs_time = #{record.ggsTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.etiantian.entity.JNodeMicroCourse">
    update j_node_micro_course
    <set>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="cUserId != null">
        c_user_id = #{cUserId,jdbcType=BIGINT},
      </if>
      <if test="cTime != null">
        c_time = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mUserId != null">
        m_user_id = #{mUserId,jdbcType=BIGINT},
      </if>
      <if test="mTime != null">
        m_time = #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ggsTime != null">
        ggs_time = #{ggsTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ref = #{ref,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etiantian.entity.JNodeMicroCourse">
    update j_node_micro_course
    set node_id = #{nodeId,jdbcType=BIGINT},
      course_id = #{courseId,jdbcType=BIGINT},
      sort_num = #{sortNum,jdbcType=INTEGER},
      c_user_id = #{cUserId,jdbcType=BIGINT},
      c_time = #{cTime,jdbcType=TIMESTAMP},
      m_user_id = #{mUserId,jdbcType=BIGINT},
      m_time = #{mTime,jdbcType=TIMESTAMP},
      ggs_time = #{ggsTime,jdbcType=TIMESTAMP}
    where ref = #{ref,jdbcType=BIGINT}
  </update>
</mapper>